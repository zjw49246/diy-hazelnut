Hello - from /home/frank/.vscode/extensions/jaredly.reason-vscode-1.7.13/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re","languageId":"reason","version":1,"text":"open Sexplib.Std;\n// open Monad_lib.Monad; // Uncomment this line to use the maybe monad\n\nlet compare_string = String.compare;\nlet compare_int = Int.compare;\n\n[@deriving (sexp, compare)]\ntype htyp =\n  | Arrow(htyp, htyp)\n  | Num\n  | Hole;\n\n[@deriving (sexp, compare)]\ntype hexp =\n  | Var(string)\n  | Lam(string, hexp)\n  | Ap(hexp, hexp)\n  | Lit(int)\n  | Plus(hexp, hexp)\n  | Asc(hexp, htyp)\n  | EHole\n  | NEHole(hexp);\n\n[@deriving (sexp, compare)]\ntype ztyp =\n  | Cursor(htyp)\n  | LArrow(ztyp, htyp)\n  | RArrow(htyp, ztyp);\n\n[@deriving (sexp, compare)]\ntype zexp =\n  | Cursor(hexp)\n  | Lam(string, zexp)\n  | LAp(zexp, hexp)\n  | RAp(hexp, zexp)\n  | LPlus(zexp, hexp)\n  | RPlus(hexp, zexp)\n  | LAsc(zexp, htyp)\n  | RAsc(hexp, ztyp)\n  | NEHole(zexp);\n\n[@deriving (sexp, compare)]\ntype child =\n  | One\n  | Two;\n\n[@deriving (sexp, compare)]\ntype dir =\n  | Child(child)\n  | Parent;\n\n[@deriving (sexp, compare)]\ntype shape =\n  | Arrow\n  | Num\n  | Asc\n  | Var(string)\n  | Lam(string)\n  | Ap\n  | Lit(int)\n  | Plus\n  | NEHole;\n\n[@deriving (sexp, compare)]\ntype action =\n  | Move(dir)\n  | Construct(shape)\n  | Del\n  | Finish;\n\nmodule TypCtx = Map.Make(String);\ntype typctx = TypCtx.t(htyp);\n\nexception Unimplemented;\n\nlet rec erase_exp = (e: zexp): hexp => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  switch (e) {\n  | Cursor(he) => he\n  | Lam(str, ze) => Lam(str, erase_exp(ze))\n  | LAp(ze, he) => Ap(erase_exp(ze), he)\n  | RAp(he, ze) => Ap(he, erase_exp(ze))\n  | LPlus(ze, he) => Plus(erase_exp(ze), he)\n  | RPlus(he, ze) => Plus(he, erase_exp(ze))\n  | LAsc(ze, ht) => Asc(erase_exp(ze), ht)\n  | RAsc(he, zt) => Asc(he, erase_typ(zt))\n  | NEHole(ze) => NEHole(erase_exp(ze))\n  };\n}\n\nand erase_typ = (zt: ztyp): htyp => {\n  switch (zt) {\n  | Cursor(ht) => ht\n  | LArrow(zt, ht) => Arrow(erase_typ(zt), ht)\n  | RArrow(ht, zt) => Arrow(ht, erase_typ(zt))\n  };\n};\n\nlet rec consistent = (t1: htyp, t2: htyp): bool => {\n  switch (t1) {\n  | Arrow(t1_1, t1_2) =>\n    switch (t2) {\n    | Arrow(t2_1, t2_2) =>\n      if (consistent(t1_1, t2_1) && consistent(t1_2, t2_2)) {\n        true;\n      } else {\n        false;\n      }\n    | Num => false\n    | Hole => true\n    }\n  | Num =>\n    switch (t2) {\n    | Arrow(_, _) => false\n    | Num => true\n    | Hole => true\n    }\n  | Hole => true\n  };\n};\n\nlet match_arrow = (t: htyp): option(htyp) => {\n  switch (t) {\n  | Arrow(_, _) => Some(t)\n  | Num => None\n  | Hole => Some(Arrow(Hole, Hole))\n  };\n};\n\nlet rec syn = (ctx: typctx, e: hexp): option(htyp) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  switch (e) {\n  | Var(str) =>\n    if (TypCtx.mem(str, ctx)) {\n      Some(TypCtx.find(str, ctx));\n    } else {\n      None;\n    }\n  | Lam(_, _) => None\n  | Ap(he1, he2) =>\n    let t1 = syn(ctx, he1);\n    switch (t1) {\n    | Some(t2_arrow_t) =>\n      switch (t2_arrow_t) {\n      | Arrow(_, _)\n      | Hole =>\n        let arrow = match_arrow(t2_arrow_t);\n        switch (arrow) {\n        | Some(Arrow(t2, t)) =>\n          if (ana(ctx, he2, t2)) {\n            Some(t);\n          } else {\n            None;\n          }\n        | _ => None\n        };\n      | Num => None\n      }\n    | None => None\n    };\n  | Lit(_) => Some(Num)\n  | Plus(he1, he2) =>\n    if (ana(ctx, he1, Num) && ana(ctx, he2, Num)) {\n      Some(Num);\n    } else {\n      None;\n    }\n  | Asc(he, ht) =>\n    if (ana(ctx, he, ht)) {\n      Some(ht);\n    } else {\n      None;\n    }\n  | EHole => Some(Hole)\n  | NEHole(he) =>\n    let syn_result = syn(ctx, he);\n    switch (syn_result) {\n    | Some(_) => Some(Hole)\n    | None => None\n    };\n  };\n}\n\nand ana = (ctx: typctx, e: hexp, t: htyp): bool => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  switch (e) {\n  | Lam(str, he) =>\n    switch (t) {\n    | Arrow(_, _)\n    | Hole =>\n      let arrow = match_arrow(t);\n      switch (arrow) {\n      | Some(Arrow(t1, t2)) =>\n        let ctx_new = TypCtx.add(str, t1, ctx);\n        if (ana(ctx_new, he, t2)) {\n          true;\n        } else {\n          false;\n        };\n      | _ => false\n      };\n    | Num => false\n    }\n  | _ =>\n    let syn_result = syn(ctx, e);\n    switch (syn_result) {\n    | Some(t_) =>\n      if (consistent(t, t_)) {\n        true;\n      } else {\n        false;\n      }\n    | None => false\n    };\n  };\n};\n\nlet syn_action =\n    (ctx: typctx, (e: zexp, t: htyp), a: action): option((zexp, htyp)) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = t;\n  let _ = a;\n\n  raise(Unimplemented);\n}\n\nand ana_action = (ctx: typctx, e: zexp, a: action, t: htyp): option(zexp) => {\n  // Used to suppress unused variable warnings\n  // Okay to remove\n  let _ = ctx;\n  let _ = e;\n  let _ = a;\n  let _ = t;\n\n  raise(Unimplemented);\n};\n"}}}
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"},"range":{"start":{"line":79,"character":20},"end":{"line":79,"character":20}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"},"range":{"start":{"line":78,"character":14},"end":{"line":78,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"},"range":{"start":{"line":78,"character":14},"end":{"line":78,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"},"range":{"start":{"line":78,"character":14},"end":{"line":78,"character":14}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/hazelnut.re"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00691413879395ms
Found a `dune` file at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
]] Making a new jbuilder package at /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut
=== Project root: /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut
Detected `opam` dependency manager for local use
Sending response {"id": 7, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /home/frank/zjw/Research/PL/DIY_Hazel/diy-hazelnut/hazelnut/.merlin", "command": ""}}]}
